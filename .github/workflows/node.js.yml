# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs


name: Node.js CI / CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

#CI
  test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: userapi

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        redis-version: [6]

    steps:
    
    
    - uses: actions/checkout@v3
    - name: Start Redis
      uses: supercharge/redis-github-action@1.4.0
      with:
        redis-version: ${{ matrix.redis-version }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
    #CD
    
    #deploy:
    #  needs: test # verify CI is succefuly completed
    #  runs-on: unbuntu-latest
    #  steps:
    #    -uses: actions/checkout@v2
       #todo deployement with heroku
   #- uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
   #     with:
   #       heroku_api_key: ${{secrets.HEROKU_API_KEY}}
    #      heroku_app_name: "project-devops-MARTINEZ-CONCHEZ" #Must be unique in Heroku
   #       heroku_email: "clement.conchezboueytou@edu.ece.fr" won't work because we didn't trusted the website wanting our credit card
   #       appdir: userapi # Define appdir if you application is in a subfolder
  

